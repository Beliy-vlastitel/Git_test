import requests

class Ask_new_location:
    '''Работа с новой локацией'''

    def create_new_location(self):
        '''Создание новой локации'''

        bace_url = "https://rahulshettyacademy.com"   #Базовый урл
        key = "?key=qaclick123"                       #Параметр для всех запросов



        '''Создание новой локации'''

        post_resource= "/maps/api/place/add/json"     #Ресурс метода пост
        post_url = bace_url+post_resource+key
        print(post_url)



        json_for_create_location ={

        "location": {

        "lat": -38.383494,

        "lng": 33.427362

        }, "accuracy": 50,

        "name": "Frontline house",

        "phone_number": "(+91) 983 893 3937",

        "address": "29, side layout, cohen 09",

        "types": [

         "shoe park",

        "shop"

         ],

         "website": "http://google.com",

        "language": "French-IN"

         }

        result_post =requests.post(post_url,json=json_for_create_location)
        print(result_post.text)
        print(result_post.json().get("place_id"))
        assert 200==result_post.status_code
        if 200==result_post.status_code:
            print("Успешно мы получили новую локацию")
        else:
            print("Сбой")
            print('......................................')
        place_id=result_post.json().get("place_id")
        print("place_id : ",place_id)




        '''Проверка создания новой локации'''


        get_resource = '/maps/api/place/get/json'  # Ресурс метода GET
        get_url = f'{bace_url}{get_resource}{key}&place_id={place_id}'
        print(get_url)
        result_get = requests.get(get_url)
        print(result_get.json())
        assert 200 == result_get.status_code
        if 200 == result_get.status_code:
            print("Проверка создания новой локации прошла успешно" )
            print('......................................')
        else:
            print("Сбой")




        '''Изменение новой локации'''

        put_resource = '/maps/api/place/update/json'  # Ресурс метода PUT


        body_put={

        "place_id":place_id,

        "address":"100 Lenina street, RU",

        "key":"qaclick123"

        }
        put_url = f'{bace_url}{put_resource}{key}'
        result_put = requests.put(put_url,json=body_put)
        print(result_put.text)
        assert 200 == result_put.status_code
        if 200 == result_get.status_code:
            print("Изменение новой локации прошла успешно" )
            print('......................................')
        else:
            print("Сбой")
        chek_put_info = result_put.json()
        print(chek_put_info)



        '''Проверка создания новой локации'''

        result_get = requests.get(get_url)
        print(result_get.json())
        assert 200 == result_get.status_code
        if 200 == result_get.status_code:
            print("Проверка измененной локации прошла успешно")

        else:
            print("Сбой")

        chek_adres = result_get.json()
        chek_adres_info = chek_adres.get('address')
        print(chek_adres_info)




nev_place = Ask_new_location()
nev_place.create_new_location()